group 'com.github.knaufk'
version '0.4'

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath('com.diffplug.gradle.spotless:spotless:2.4.1')
    }
}

apply plugin: 'java'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "jacoco"


sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.flinkVersion="1.6.3"

repositories {
    mavenCentral()
}

def scalaBinaryVersion = hasProperty("scalaBinaryVersion") ? scalaBinaryVersion : "$System.env.SCALA_BINARY_VERSION"

dependencies {
    compile 'junit:junit:4.12'
    compile "org.apache.flink:flink-test-utils_$scalaBinaryVersion:$flinkVersion"
    compile "org.apache.flink:flink-runtime-web_$scalaBinaryVersion:$flinkVersion"
    compile "org.apache.flink:flink-shaded-hadoop2:$flinkVersion"

    testCompile 'org.assertj:assertj-core:3.6.2'
    testCompile 'org.awaitility:awaitility:3.0.0'
}

spotless {
    java {
        googleJavaFormat()
    }
}

findbugs {
    excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled true
        html.enabled false
    }
}

test {
    minHeapSize = "128m"
    maxHeapSize = "1g"
    maxParallelForks = 1
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}


signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Flink-JUnit'
                packaging 'jar'
                artifactId "flink-junit_$scalaBinaryVersion"
                description 'This is a small, easy-to-use, yet flexible JUnit Rule, which spins up and tears down an Apache Flink cluster for integration tests. '
                url 'https://github.com/knaufk/flink-junit'

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection 'scm:git:git://github.com/knaufk/flink-junit.git'
                    developerConnection 'scm:git:git://github.com/knaufk/flink-junit.git'
                    url 'https://github.com/knaufk/flink-junit/tree/master'
                }

                developers {
                    developer {
                        id 'knaufk'
                        name 'Konstantin Knauf'
                        email 'knauf.konstantin@gmail.com'
                    }
                }
            }
        }
    }
}
